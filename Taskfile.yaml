version: "3"

tasks:
  build:
    desc: Build the project
    cmds:
      - cargo build

  run:
    desc: Run the project with arguments
    cmds:
      - cargo run -- {{.CLI_ARGS}}

  analyse:
    desc: Analyse the project
    cmds:
      - cargo clippy

  gateway:
    desc: Run the project as a server
    cmds:
      - docker run --rm -it -p 8080:8080 --env-file .env ghcr.io/inference-gateway/inference-gateway:v0.1.15

  test:
    desc: Run the tests
    cmds:
      - cargo test

  install:
    desc: Install the project
    cmds:
      - cargo install --path .

  build-container:
    desc: Run the release container command locally
    vars:
      GITHUB_USER: edenreich
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      REPOSITORY_OWNER: inference-gateway
      REPOSITORY_NAME: coder
      ORG_NAME: inference-gateway
      TARGET: aarch64-unknown-linux-musl
      VERSION: local
      CONTAINER_REGISTRY: ghcr.io
    cmds:
      - mkdir -p $(pwd)/kaniko/cache
      - mkdir -p $(pwd)/kaniko/.docker
      - |
        cat << EOF > $(pwd)/kaniko/.docker/config.json
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n {{.GITHUB_USER}}:{{.GITHUB_TOKEN}} | base64 -w0)"
            }
          }
        }
        EOF
      - |
        docker run --rm \
          --cpu-shares=4096 \
          --memory=6g \
          --cpus=4 \
          -v $(pwd):/workspace \
          -v $(pwd)/kaniko/artifacts:/workspace/artifacts \
          -v $(pwd)/kaniko/cache:/cache \
          -v $(pwd)/kaniko/.docker:/kaniko/.docker \
          -w /workspace \
          --entrypoint="" \
          gcr.io/kaniko-project/executor:v1.23.2-debug \
          /kaniko/executor \
            --context=. \
            --dockerfile=Dockerfile \
            --target=minimal \
            --destination={{.CONTAINER_REGISTRY}}/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}:latest \
            --destination={{.CONTAINER_REGISTRY}}/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}:minimal \
            --destination={{.CONTAINER_REGISTRY}}/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}:minimal-{{.VERSION}} \
            --build-arg=TARGET_ARCH={{.TARGET}} \
            --label="org.opencontainers.image.version={{.VERSION}}" \
            --label="org.opencontainers.image.revision=" \
            --label="org.opencontainers.image.source=" \
            --label="org.opencontainers.image.url=" \
            --label="org.opencontainers.image.documentation=" \
            --label="org.opencontainers.image.title=Coder" \
            --label="org.opencontainers.image.description=The AI-Powered Coder without tools" \
            --label="org.opencontainers.image.licenses=MIT" \
            --label="org.opencontainers.image.vendor=" \
            --no-push \
            --tar-path=/workspace/artifacts/my-image.tar \
            --cache=true \
            --cache-repo={{.CONTAINER_REGISTRY}}/{{.REPOSITORY_OWNER}}/{{.REPOSITORY_NAME}}/cache-{{.TARGET}}-local \
            --cache-ttl=336h \
            --compressed-caching=true \
            --snapshot-mode=redo \
            --use-new-run \
            --ignore-path=".git" \
            --skip-unused-stages \
