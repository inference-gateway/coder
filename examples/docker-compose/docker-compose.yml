services:
  coder:
    image: coder:latest
    working_dir: /app
    volumes:
      - repository:/app
    env_file:
      - .env
    command: |
      coder init &&
      coder index &&
      coder fix --issue=${CODER_ISSUE}
    depends_on:
      repository-cloner:
        condition: service_completed_successfully
      inference-gateway-health-checker:
        condition: service_healthy

  inference-gateway:
    image: ghcr.io/inference-gateway/inference-gateway:v0.1.15
    env_file:
      - .env

  inference-gateway-health-checker:
    image: curlimages/curl:latest
    depends_on:
      - inference-gateway
    command:
      [
        "sh",
        "-c",
        "while true; do curl -f http://inference-gateway:8080/health || exit 1; sleep 10; done",
      ]
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep curl | grep -v grep || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  repository-cloner:
    image: alpine/git:latest
    working_dir: /app
    volumes:
      - repository:/app
    env_file:
      - .env
    environment:
      GITHUB_TOKEN: ${CODER_SCM_TOKEN}
      # GITLAB_TOKEN: ${CODER_SCM_TOKEN}
    entrypoint: /bin/sh
    command:
      - -c
      - |
        git clone https://github.com/${CODER_SCM_USERNAME}/${CODER_SCM_REPOSITORY}.git .
        chown -R 1000:1000 /app
      # - |
      #   git clone -n https://gitlab.com/${CODER_SCM_USERNAME}/${CODER_SCM_REPOSITORY}.git .
      #   chown -R 1000:1000 /app

volumes:
  repository:
